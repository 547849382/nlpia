# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = nlpia
description = Natural Language Processing in Action examples, data, and utilities
author = Hobson Lane, Cole Howard, Hannes Hapke, Zachary Kent
author-email = nlpia@totalgood.com
license = mit
url = http://github.com/totalgood/nlpia
long-description = README.rst
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3.5
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Text Processing :: Linguistic
    Topic :: Text Processing :: Filters
    Topic :: Text Processing :: General
    Topic :: Text Processing :: Indexing
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: Artificial Intelligence

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# Project dependencies (unversioned, semicolon-separated)
install_requires = future; jupyter; h5py; matplotlib; nltk; pandas; pypandoc; plotly; cufflinks; python-Levenshtein; scikit-learn; scipy; seaborn; tqdm; gensim; pandas-datareader; pugnlp
# Add here test requirements (semicolon-separated)
tests_require = pytest; pytest-cov

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install nlpia[voice]` like:
twitter = tweepy; twython
deep = keras; tensorflow; annoy; gensim
chat = aichat; will; redis; ChatterBot; lxml; aiml; aichat
all = nlpia[deep]; nlpia[chat]; nlpia[twitter]


[test]
# py.test options when running `python setup.py test`
addopts = tests

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov nlpia --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox

[aliases]
docs = build_sphinx
release = sdist bdist_wheel --universal upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.0
package = nlpia
extensions =
    travis
    pre_commit
    tox
